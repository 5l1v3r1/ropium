# -*- coding: utf-8 -*- 
# Main module:  exploit-mode 

from prompt_toolkit import PromptSession, ANSI
from ropgenerator.core.IO import str_exploit, str_bold, str_special, banner, error
from ropgenerator.exploit.Function import function

import sys

# Definitions of commands 
CMD_HELP = "help"
CMD_SHELLCODE = "shellcode"
CMD_SYSCALL = "syscall"
CMD_PWN = "pwn"
CMD_FUNCTION = "function"
CMD_MAIN = "main"
CMD_EXIT = "exit"

helpStr = banner([str_bold('Exploit-Mode Commands'),
    str_special('(For more info about a command type <cmd -h>)')])
helpStr += '\n\t' + str_bold(CMD_PWN) + ': \t\tbuild an exploit'
helpStr += '\n\t' + str_bold(CMD_SYSCALL) + ': \tperform a syscall'
helpStr += '\n\t' + str_bold(CMD_FUNCTION) + ':\tcall a regular function'
helpStr += '\n\t' + str_bold(CMD_SHELLCODE) + ': \tmanage shellcodes'

helpStr += '\n\n\t' + str_bold(CMD_HELP) + ': \t\tshow this help'
helpStr += '\n\t' + str_bold(CMD_MAIN) + ': \t\treturn to the main menu'
helpStr += '\n\t' + str_bold(CMD_EXIT) + ': \t\texit ROPGenerator'

promptSession = PromptSession(ANSI(u"("+ str_exploit(u'exploit') +u")> "))

def exploit_mode():
    """
    Returns
    -------
    True if ROPGenerator must continue
    False if ROPGenerator must be closed 
    """
    
    finish = False
    while( not finish ):
        try:
            # Get command 
            user_input = promptSession.prompt()
            args = user_input.split()
            argslen = len(args)
            if( argslen > 0 ):
                command = args[0]
            else:
                command = None
                continue
                
            # Execute command 
            if( command == CMD_PWN ):
                error("Not implemented")
            elif( command == CMD_SHELLCODE ):
                error("Not implemented")
            elif( command == CMD_SYSCALL ):
                error("Not implemented")
            elif( command == CMD_FUNCTION ):
                function(args[1:])
            elif( command == CMD_EXIT ):
                return False
            elif( command == CMD_HELP ):
                print(helpStr)
            elif( command == CMD_MAIN ):
                finish = True
            else:
                error("Unknown command '{}'".format(command))
            if( command != None ):
                print('')
        except KeyboardInterrupt:
            pass
    return True
